#OS 정리 1

<hr>

## Chapter 1

### OS란?

- 유저와 컴퓨터 hardware사이의 intermediary 역할을 해주는 프로그램
- 프로그램을 실행하고 유저 problems를 더 쉽게 해결할 수 있게 해준다.
- 컴퓨터 시스템을 더 간편하게 사용하게 한다.
- 컴퓨터 하드웨어를 더 효율적인 방식으로 사용하게 한다.


### 컴퓨터 시스템 구조

1. 하드웨어
    - 기본적인 연산자원들을 제공한다. ex) CPU, memory, I/O devices..
2. OS
    - 다양한 어플리케이션과 유저들 사이에서 하드웨어의 사용을 조정한다
3. 어플리케이션 프로그램
    - 유저의 문제를 해결하기 위해 시스템 자원을 사용하는 방식을 규정한다
- ex)워드프로세서, 컴파일러, 웹브라우저, DB시스템, 비디오 게임..
4. 유저
    - 사람, 기계들, 다른 컴퓨터들

### OS는 무엇을 하는가?

- 관점에 따라 다르다.
- 유저는 편안한 것, 사용의 용이성을 원한다 (resource utilization은 신경쓰지 않는다)
- 메인프레임이나 미니컴퓨터같은 공유컴퓨터는 모든 유저들을 만족시켜야한다.
- 워크스테이션같은 전용시스템의 사용자는 서버로부터 나눠서 제공받은 전용 자원을 가진다.(워크스테이션은 서버사이드에서 대부분의 프로그램이 돌아가고 PC에서는 나머지 특정 프로그램만 돌리는 형태이다.)
- 휴대용 컴퓨터들은 자원을 적게가지고있고, 개인적 유용성과 배터리 수명에 최적화되어있다.
- 자동차와 기계등에 embedded한 일부 컴퓨터들은 user interface를 거의/아예 안가지고 있다.

### OS의 정의

* **resource allocator**
    - 모든 자원을 관리한다
    - 충돌하는 request간에 효율적이고 공정한 자원사용을 결정한다.

* **control program**
    - 에러를 막기위해/컴퓨터의 부적절한 사용을 방지하기 위해 사용자 프로그램의 실행을 제어한다.

* 부가설명 
    - 운영체제의 완벽한universally accepted 정의는 없다.
    - “사용자가 운영체제를 주문했을 때 vendor가 실어보내는 모든것”이 good approximation이다.(그러나 varies wildly)
    - “컴퓨터에서 항상 실행되는 프로그램”으로, __kernel__ 이라고 불린다.
    - 다른것들 중 시스템 프로그램은 운영체제와 연관이 있으나 커널의 일부분이 아닌 다른 프로그램이고, 응용프로그램은 시스템 운영과 관련없는 모든 프로그램이다.


### 컴퓨터 실행

+ 전원이 켜지거나 리부팅될때, 초기프로그램인 __bootstrap program__ 이 실행된다.
    - 이 프로그램은 일반적으로 __firmware__ 라고 알려진 컴퓨터 내의 ROM or EPROM에 저장된다.   
    *firmware : 변경할 필요가 없는 소프트웨어를 하드웨어에 기입하여 사용하는것으로, 회로 단순화/처리 고속화를 위해 사용한다.
    - 시스템의 모든 면을 초기화한다
    - 운영체제의 커널을 찾아 메모리에 적재loads하고, 커널을 실행한다.
    - 이 과정이 이루어지면, 컴퓨터는 OS kernel의 컨트롤 하에 놓이게 된다.
    
+ Operating system
    - 첫번째 프로세스를 실행한다 such as "init".
    - 어떤 event가 발생하기를 기다린다.
    
### Computer System Organization

* Computer-system operation
    - 하나 이상의 CPU, divice controller들(=components)이 shared memory로 접근하기 위해 common bus로 연결되어있다.
    - CPU와 devices의 concurrent한 실행을 위해 memory 할당이 실시간으로 바뀐다(실제로 완전히 sametime은 아니지만, 그렇게 보인다)